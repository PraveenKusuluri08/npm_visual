
count=1390 _str 
	"str"
	"str"
count=96 _Contact 
	"dict[str,dict]{(name,_str),(email,_str)}"
	"dict[str,dict]{(name,str),(email,str)}"
count=83 _int 
	"int"
	"int"
count=59 [_Contact] 
	"list[_Contact]"
	"list[dict[str,dict]{(name,_str),(email,_str)}]"
count=53 _bool 
	"bool"
	"bool"
count=37 _{} 
	"dict[str,dict]{}"
	"dict[str,dict]{}"
count=36 _Signature 
	"dict[str,dict]{(keyid,_str),(sig,_str)}"
	"dict[str,dict]{(keyid,str),(sig,str)}"
count=36 [_Signature] 
	"list[_Signature]"
	"list[dict[str,dict]{(keyid,_str),(sig,_str)}]"
count=36 _d 
	"dict[str,dict]{(host,_str),(tmp,_str)}"
	"dict[str,dict]{(host,str),(tmp,str)}"
count=30 _a 
	"dict[str,dict]{(latest,_str)}"
	"dict[str,dict]{(latest,str)}"
count=23 _b 
	"dict[str,dict]{(name,_str)}"
	"dict[str,dict]{(name,str)}"
count=21 _[] 
	"list[]"
	"list[]"
count=17 _u 
	"dict[str,dict]{(test,_str)}"
	"dict[str,dict]{(test,str)}"
count=16 _gu 
	"list[_str]"
	"list[str]"
count=14 _Dist 
	"dict[str,dict]{(integrity,_str),(shasum,_str),(tarball,_str),(fileCount,_int),(unpackedSize,_int),(signatures,[_Signature])}"
	"dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}"
count=13 _g 
	"dict[str,dict]{(created,_str),(1.0.0,_str),(modified,_str)}"
	"dict[str,dict]{(created,str),(1.0.0,str),(modified,str)}"
count=12 _c 
	"dict[str,dict]{(integrity,_str),(shasum,_str),(tarball,_str),(fileCount,_int),(unpackedSize,_int),(npm-signature,_str),(signatures,[_Signature])}"
	"dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(npm-signature,str),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}"
count=9 _bc 
	"dict[str,dict]{(type,_str),(url,_str)}"
	"dict[str,dict]{(type,str),(url,str)}"
count=9 _bd 
	"dict[str,dict]{(url,_str)}"
	"dict[str,dict]{(url,str)}"
count=7 _e 
	"dict[str,dict]{(name,_str),(version,_str),(main,_str),(author,_b),(license,_str),(_id,_str),(_nodeVersion,_str),(_npmVersion,_str),(dist,_c),(_npmUser,_Contact),(directories,_{}),(maintainers,[_Contact]),(_npmOperationalInternal,_d),(_hasShrinkwrap,_bool)}"
	"dict[str,dict]{(name,str),(version,str),(main,str),(author,dict[str,dict]{(name,str)}),(license,str),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(npm-signature,str),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)}"
count=7 _f 
	"dict[str,dict]{(1.0.0,_e)}"
	"dict[str,dict]{(1.0.0,dict[str,dict]{(name,str),(version,str),(main,str),(author,dict[str,dict]{(name,str)}),(license,str),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(npm-signature,str),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)})}"
count=7 _i 
	"dict[str,dict]{(_id,_str),(_rev,_str),(name,_str),(dist-tags,_a),(versions,_f),(time,_g),(maintainers,[_Contact]),(author,_h),(license,_str),(readme,_str),(readmeFilename,_str)}"
	"dict[str,dict]{(_id,str),(_rev,str),(name,str),(dist-tags,dict[str,dict]{(latest,str)}),(versions,dict[str,dict]{(1.0.0,dict[str,dict]{(name,str),(version,str),(main,str),(author,dict[str,dict]{(name,str)}),(license,str),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(npm-signature,str),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)})}),(time,dict[str,dict]{(created,str),(1.0.0,str),(modified,str)}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(author,dict[str,dict]{(name,str)}),(license,str),(readme,str),(readmeFilename,str)}"
count=7 _l 
	"dict[str,dict]{(integrity,_str),(shasum,_str),(tarball,_str),(fileCount,_int),(unpackedSize,_int),(signatures,[_Signature]),(npm-signature,_str)}"
	"dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}]),(npm-signature,str)}"
count=6 _t 
	"dict[str,dict]{(@types/inquirer,_str)}"
	"dict[str,dict]{(@types/inquirer,str)}"
count=5 _s 
	"dict[str,dict]{(inquirer,_str)}"
	"dict[str,dict]{(inquirer,str)}"
count=5 _hb 
	"dict[str,dict]{(lib,_ha)}"
	"dict[str,dict]{(lib,list[str])}"
count=5 _hc 
	"dict[str,dict]{(compilerOptions,_hb)}"
	"dict[str,dict]{(compilerOptions,dict[str,dict]{(lib,list[str])})}"
count=4 _cb 
	"dict[str,dict]{(created,_str),(0.0.0,_str),(modified,_str)}"
	"dict[str,dict]{(created,str),(0.0.0,str),(modified,str)}"
count=4 _dm 
	"dict[str,dict]{(email,_str),(name,_str)}"
	"dict[str,dict]{(email,str),(name,str)}"
count=4 _dn 
	"list[_dm]"
	"list[dict[str,dict]{(email,_str),(name,_str)}]"
count=4 _gz 
	"dict[str,dict]{(timeout,_int),(file,_str)}"
	"dict[str,dict]{(timeout,int),(file,str)}"
count=3 _fv 
	"dict[str,dict]{(tarball,_str),(integrity,_str),(shasum,_str),(fileCount,_int),(unpackedSize,_int),(signatures,[_Signature]),(npm-signature,_str)}"
	"dict[str,dict]{(tarball,str),(integrity,str),(shasum,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}]),(npm-signature,str)}"
count=3 _fx 
	"dict[str,dict]{(name,_str),(version,_str),(description,_str),(repository,_str),(_id,_str),(_integrity,_str),(_resolved,_str),(_from,_str),(dist,_fv),(_npmUser,_Contact),(directories,_{}),(maintainers,_[]),(_npmOperationalInternal,_fw),(_hasShrinkwrap,_bool)}"
	"dict[str,dict]{(name,str),(version,str),(description,str),(repository,str),(_id,str),(_integrity,str),(_resolved,str),(_from,str),(dist,dict[str,dict]{(tarball,str),(integrity,str),(shasum,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}]),(npm-signature,str)}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)}"
count=3 _il 
	"dict[str,dict]{(base-64,_str),(node-fetch,_str),(ws,_str)}"
	"dict[str,dict]{(base-64,str),(node-fetch,str),(ws,str)}"
count=2 _ax 
	"dict[str,dict]{(name,_str),(version,_str),(description,_str),(_id,_str),(_nodeVersion,_str),(_npmVersion,_str),(dist,_av),(_npmUser,_Contact),(directories,_{}),(maintainers,[_Contact]),(_npmOperationalInternal,_aw),(_hasShrinkwrap,_bool)}"
	"dict[str,dict]{(name,str),(version,str),(description,str),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(npm-signature,str),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)}"
count=2 _bb 
	"dict[str,dict]{(name,_str),(email,_str),(url,_str)}"
	"dict[str,dict]{(name,str),(email,str),(url,str)}"
count=2 _dx 
	"dict[str,dict]{(created,_str),(1.0.1,_str),(modified,_str)}"
	"dict[str,dict]{(created,str),(1.0.1,str),(modified,str)}"
count=2 _ei 
	"dict[str,dict]{(--m4r5-simple-calculator,_str)}"
	"dict[str,dict]{(--m4r5-simple-calculator,str)}"
count=2 _eo 
	"dict[str,dict]{(name,_str),(version,_str),(description,_str),(main,_str),(type,_str),(bin,_ei),(scripts,_ej),(author,_ek),(license,_str),(dependencies,_el),(devDependencies,_em),(_id,_str),(_nodeVersion,_str),(_npmVersion,_str),(dist,_Dist),(_npmUser,_Contact),(directories,_{}),(maintainers,[_Contact]),(_npmOperationalInternal,_en),(_hasShrinkwrap,_bool)}"
	"dict[str,dict]{(name,str),(version,str),(description,str),(main,str),(type,str),(bin,dict[str,dict]{(--m4r5-simple-calculator,str)}),(scripts,dict[str,dict]{(test,str)}),(author,dict[str,dict]{(name,str)}),(license,str),(dependencies,dict[str,dict]{(inquirer,str)}),(devDependencies,dict[str,dict]{(@types/inquirer,str)}),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}])}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)}"
count=2 _gp 
	"dict[str,dict]{(0.0.1-security.6,_go)}"
	"dict[str,dict]{(0.0.1-security.6,dict[str,dict]{(name,str),(version,str),(description,str),(repository,str),(_id,str),(_integrity,str),(_resolved,str),(_from,str),(dist,dict[str,dict]{(tarball,str),(integrity,str),(shasum,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}]),(npm-signature,str)}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)})}"
count=2 _gx 
	"dict[str,dict]{(@rollup/plugin-commonjs,_str),(@rollup/plugin-node-resolve,_str),(@types/emscripten,_str),(@types/node-fetch,_str),(error-stack-parser,_str),(mocha,_str),(prettier,_str),(rollup,_str),(rollup-plugin-terser,_str),(rollup-plugin-ts,_str),(terser,_str),(ts-node,_str),(tsd,_str),(typescript,_str),(typedoc,_str)}"
	"dict[str,dict]{(@rollup/plugin-commonjs,str),(@rollup/plugin-node-resolve,str),(@types/emscripten,str),(@types/node-fetch,str),(error-stack-parser,str),(mocha,str),(prettier,str),(rollup,str),(rollup-plugin-terser,str),(rollup-plugin-ts,str),(terser,str),(ts-node,str),(tsd,str),(typescript,str),(typedoc,str)}"
count=2 _hd 
	"dict[str,dict]{(base-64,_str),(node-fetch,_str)}"
	"dict[str,dict]{(base-64,str),(node-fetch,str)}"
count=2 _hg 
	"dict[str,dict]{(name,_str),(version,_str),(description,_str),(keywords,_gu),(homepage,_str),(repository,_gv),(bugs,_gw),(license,_str),(devDependencies,_gx),(type,_str),(main,_str),(scripts,_gy),(mocha,_gz),(tsd,_hc),(dependencies,_hd),(_id,_str),(_nodeVersion,_str),(_npmVersion,_str),(dist,_he),(_npmUser,_Contact),(directories,_{}),(maintainers,[_Contact]),(_npmOperationalInternal,_hf),(_hasShrinkwrap,_bool)}"
	"dict[str,dict]{(name,str),(version,str),(description,str),(keywords,list[str]),(homepage,str),(repository,dict[str,dict]{(type,str),(url,str)}),(bugs,dict[str,dict]{(url,str)}),(license,str),(devDependencies,dict[str,dict]{(@rollup/plugin-commonjs,str),(@rollup/plugin-node-resolve,str),(@types/emscripten,str),(@types/node-fetch,str),(error-stack-parser,str),(mocha,str),(prettier,str),(rollup,str),(rollup-plugin-terser,str),(rollup-plugin-ts,str),(terser,str),(ts-node,str),(tsd,str),(typescript,str),(typedoc,str)}),(type,str),(main,str),(scripts,dict[str,dict]{(test,str)}),(mocha,dict[str,dict]{(timeout,int),(file,str)}),(tsd,dict[str,dict]{(compilerOptions,dict[str,dict]{(lib,list[str])})}),(dependencies,dict[str,dict]{(base-64,str),(node-fetch,str)}),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}]),(npm-signature,str)}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)}"
count=2 _ks 
	"dict[str,dict]{(@rollup/plugin-commonjs,_str),(@rollup/plugin-node-resolve,_str),(@types/emscripten,_str),(@types/node-fetch,_str),(@types/ws,_str),(error-stack-parser,_str),(mocha,_str),(prettier,_str),(rollup,_str),(rollup-plugin-terser,_str),(rollup-plugin-ts,_str),(terser,_str),(ts-node,_str),(tsd,_str),(typedoc,_str),(typescript,_str)}"
	"dict[str,dict]{(@rollup/plugin-commonjs,str),(@rollup/plugin-node-resolve,str),(@types/emscripten,str),(@types/node-fetch,str),(@types/ws,str),(error-stack-parser,str),(mocha,str),(prettier,str),(rollup,str),(rollup-plugin-terser,str),(rollup-plugin-ts,str),(terser,str),(ts-node,str),(tsd,str),(typedoc,str),(typescript,str)}"
count=2 _lb 
	"dict[str,dict]{(name,_str),(version,_str),(description,_str),(keywords,_kp),(homepage,_str),(repository,_kq),(bugs,_kr),(license,_str),(devDependencies,_ks),(type,_str),(main,_str),(module,_str),(scripts,_kt),(mocha,_ku),(tsd,_kx),(dependencies,_ky),(_id,_str),(_nodeVersion,_str),(_npmVersion,_str),(dist,_kz),(_npmUser,_Contact),(directories,_{}),(maintainers,[_Contact]),(_npmOperationalInternal,_la),(_hasShrinkwrap,_bool)}"
	"dict[str,dict]{(name,str),(version,str),(description,str),(keywords,list[str]),(homepage,str),(repository,dict[str,dict]{(type,str),(url,str)}),(bugs,dict[str,dict]{(url,str)}),(license,str),(devDependencies,dict[str,dict]{(@rollup/plugin-commonjs,str),(@rollup/plugin-node-resolve,str),(@types/emscripten,str),(@types/node-fetch,str),(@types/ws,str),(error-stack-parser,str),(mocha,str),(prettier,str),(rollup,str),(rollup-plugin-terser,str),(rollup-plugin-ts,str),(terser,str),(ts-node,str),(tsd,str),(typedoc,str),(typescript,str)}),(type,str),(main,str),(module,str),(scripts,dict[str,dict]{(test,str)}),(mocha,dict[str,dict]{(timeout,int),(file,str)}),(tsd,dict[str,dict]{(compilerOptions,dict[str,dict]{(lib,list[str])})}),(dependencies,dict[str,dict]{(base-64,str),(node-fetch,str),(ws,str)}),(_id,str),(_nodeVersion,str),(_npmVersion,str),(dist,dict[str,dict]{(integrity,str),(shasum,str),(tarball,str),(fileCount,int),(unpackedSize,int),(signatures,list[dict[str,dict]{(keyid,_str),(sig,_str)}]),(npm-signature,str)}),(_npmUser,dict[str,dict]{(name,str),(email,str)}),(directories,dict[str,dict]{}),(maintainers,list[dict[str,dict]{(name,_str),(email,_str)}]),(_npmOperationalInternal,dict[str,dict]{(host,str),(tmp,str)}),(_hasShrinkwrap,bool)}"

